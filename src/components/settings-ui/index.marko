import assign from 'object-assign';

class {
  onCreate() {
    this.state = {
      open: false
    };
  }
  handleKey(ev) {
    if (ev.key === ',' && ev.metaKey) {
      ev.preventDefault();
      ev.stopPropagation();
      this.open();
    } else if (ev.keyCode === 27) {
      this.close();
    }
  }
  open() {
    this.setState('open', true);
  }
  close() {
    this.setState('open', false);
  }
  clickBg(ev) {
    if (ev && ev.target && ev.target.classList.contains('overlay')) {
      this.close();
    }
  }
  toggle(key, value) {
    this.emit('settings-change', assign({}, this.input.settings, {[key]: value}));
  }
  onMount() {
    document.body.addEventListener('keydown', ev => this.handleKey(ev));
  }
  chooseCardType(type) {
    this.emit('settings-change', assign({}, this.input.settings, {deckType: type}));
  }
  close() {
    this.setState('open', false);
  }
}

style {
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 200;
    text-align: center;
    background-color: rgba(0,0,0,0.2);
    opacity: 0;
    visibility: hidden;
    -webkit-transition: opacity 0.2s ease-in;
    transition: opacity 0.2s ease-in;
  }
  .menu {
    position: fixed;
    background-color: #00c0f3;
    overflow-y: auto;
    top: 0;
    left: 0;
    width: 300px;
    height: 100%;
    color: #000;
    z-index: 202;
    padding: 0 10px;
    -webkit-transition: all 0.5s;
	  transition: all 0.5s;
    text-align: left;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }
  .menu.open {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  .overlay.open {
    opacity: 1;
    visibility: visible;
  }
  h2 {
    text-align: left;
    font-size: 1.2em;
    padding-left: 16px;
    margin: 25px 0 5px;
  }
  .btn {
    display: block;
    border: 0;
    padding: 16px;
    margin: 5px 0;
    font-size: 1em;
    cursor: pointer;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    background: transparent;
    color: #fff;
  }
  .choice {
    color: #fff;
    text-align: left;
  }
  .choice:hover,
  .choice:focus,
  .choice:active,
  .choice.active {
    background: #008dc0;
  }
  .close {
    position: absolute;
    top: 5px;
    right: 5px;
    width: auto;
    padding: 16px;
    margin: 0;
  }
  .trigger {
    z-index: 100;
    border: 0;
    background: none;
    width: 48px;
    height: 48px;
    position: fixed;
    top: 5px;
    left: 5px;
    padding: 8px;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    cursor: pointer;
  }
  .trigger span {
    font-size: 32px;
  }
  .rep {
    margin-right: 1em;
    display: inline-block;
    width: 16px;
    line-height: 1;
  }
}

<div>
  <button.trigger type="button" on-click('open')><span class="icon-menu"></span></button>
  <div.overlay class={open: state.open} on-click('clickBg')></div>
  <div.menu class={open: state.open}>
    <button.btn.close type="button" on-click('close')><span class="icon-close"></span></button>
    <h2>Card Type</h2>
    <button.btn.choice type="button" class=[input.settings.deckType === 'letters' && 'active'] on-click('chooseCardType', 'letters')><span class="rep">A</span>Letters</button>
    <button.btn.choice type="button" class=[input.settings.deckType === 'numbers' && 'active'] on-click('chooseCardType', 'numbers')><span class="rep">1</span>Numbers</button>
    <button.btn.choice type="button" class=[input.settings.deckType === 'geeky' && 'active'] on-click('chooseCardType', 'geeky')><span class="rep icon-tux"></span>Geeky</button>
    <button.btn.choice type="button" class=[input.settings.deckType === 'emoticons' && 'active'] on-click('chooseCardType', 'emoticons')><span class="rep icon-happy"></span>Emoticons</button>
    <h2>Options</h2>
    <toggle-switch checked=input.settings.hardMode on-toggle('toggle', 'hardMode') label="Hide all matches on incorrect guess"></toggle-switch>
    <toggle-switch checked=input.settings.revealMode on-toggle('toggle', 'revealMode') label="Remove matches to reveal photo"></toggle-switch>
  </div>
</div>
